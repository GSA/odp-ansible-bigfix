---

- name: Populate service facts
  service_facts:

- name: Check if besclient.service is running
  set_fact:
    existing_installations: "'besclient.service' in services"

- name: Stop and disable existing service
  service:
    name: besclient.service
    state: stopped
    enabled: false
  when: existing_installations

- name: Uninstall existing BigFix agent
  apt:
    name: besagent
    state: absent
  when: existing_installations

- name: Create necessary folders
  file:
    path: "{{ item }}"
    recurse: yes
    state: directory
    mode: 0500
  loop:
  - "{{ linux_agent_install_path }}"
  - "{{ linux_agent_config_path }}"
  - "/build-artifacts/"

- name: Copy installer files to remote server
  copy:
    src: "{{ role_path }}/files/{{ BIGFIX_AGENT_PACKAGE_NAME }}"
    dest: "/build-artifacts/{{ BIGFIX_AGENT_PACKAGE_NAME }}"

- name: Install Bigfix agent
  apt:
    deb: /build-artifacts/{{ BIGFIX_AGENT_PACKAGE_NAME  }}


- name: Copy besclient.config to config folder
  template:
    src: besclient.config.j2
    dest: "{{ linux_agent_config_path }}/besclient.config"

- name: Copy actionsite.afxm to install folder
  copy:
    src: bigfix_license.afxm
    dest: "{{ linux_agent_install_path }}/actionsite.afxm"

- name: BigFix started
  service:
    name: besclient
    enabled: yes
    state: started

